@page "/registration"

@using Wasted.Data
@using Microsoft.AspNetCore.Components.Authorization
@inject RegistrationService RegistrationService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider


<div class="flex">
</div>
<AuthorizeView>
    <NotAuthorized>
    <div class="container">
        <div class = "flex paragraphBlock" style="width:50%">
            <h1 class="tac">Sign up</h1>

            <style>
                @@import "css/Utils.css"
            </style>

            <iframe name="dummyframe" id="dummyframe" style="display: none;"></iframe>
            <form method="post" action="submitscrip.php" target="dummyframe">
            <div> 
                <input class="form-control tac regField" type="text"  placeholder="Name" @bind="@NameBox"/>
                <input class="form-control tac regField" type="text"   placeholder="Last name" @bind="@LastNameBox"/>
                <input class="form-control tac regField" type="email"  placeholder="Email"  @bind="@EmailBox"/>
                <input class="form-control tac regField" type="password" placeholder="Password" @bind="@PasswordBox"/>
            </div>
            <div>
                <button class="buttonSub" @onclick="submitPressed">Submit</button>
            </div>
            </form>
        </div>
    </div>
    </NotAuthorized>
</AuthorizeView>
   

<div id = "vertically-aligned-block"class="flex float">
    <ul>
        @foreach (string ErrorMesage in @ErrorMessages)
        {
            @ErrorMesage
            <br>
        }
    </ul>
</div>

@code{

    public static List<string> ErrorMessages = new List<string>();
    static string NameBox ;
    static string LastNameBox ;
    static string EmailBox ; 
    static string PasswordBox ;
    static List<User> users = new List<User>();
    


    public async Task submitPressed()
    {
        ErrorMessages.Clear();
        ErrorMessages = await RegistrationService.AddUserData(NameBox, LastNameBox, EmailBox, PasswordBox);
        if(ErrorMessages.Any() && ErrorMessages[0] == "Success! Welcome to the Wasted family!")
        {
            ErrorMessages.Clear();
            NameBox = "";
            LastNameBox = "";
            EmailBox = "";
            PasswordBox = "";
            ((CustomAuthStateProvider)AuthenticationStateProvider).markUserAsAuthenticated(EmailBox, "user");
            NavigationManager.NavigateTo("/");
        }
    }

}
