@page "/recipecalc"
@using System.IO

<h1><font color=rbg(0,15,128)><br>RECIPE CALCULATOR</font></h1>

<p style="font-size:20px;">Reduce food waste by using leftover products!</p>

<p style="font-size:20px;">Using this page you will be able to enter (or upload) the produce, and we will provide you with endless recipes, where you can use them!</p>
<hr><hr>

<button class="btn btn-primary" @onclick="SaveList">Save list</button>

<button class="btn btn-primary" @onclick="LoadList">Load list</button>

<button class="btn btn-primary" @onclick="FindRecipe">Find a recipe!</button>

<hr>

@code {
    string itemTextField = "";
    string leftTextField = "";
    string unitTextField = "";
    string dateTextField = "";
    List<RecipeModel> models = new();
    List<RecipeModel> ingredients = new();

    List<String> dishes = new();


    private void AddProduct()
    {
        if(!(string.IsNullOrEmpty(itemTextField)&&string.IsNullOrEmpty(leftTextField)&&string.IsNullOrEmpty(unitTextField)&&string.IsNullOrEmpty(dateTextField)))
        models.Add(new RecipeModel(){Item = itemTextField, Left = Int32.Parse(leftTextField), Unit = unitTextField, Date = dateTextField});
    }

    private void SaveList()
    {
        File.WriteAllText("RecipeList.txt", String.Empty);
        foreach (var model in models)
        {
            if(model.Unit == "kg")
                File.AppendAllText(@"RecipeList.txt", model.Item.ToLower() + " " + model.Left * 1000 + " g " + model.Date + Environment.NewLine);
            else if(model.Unit == "l")
            {
                File.AppendAllText(@"RecipeList.txt", model.Item.ToLower() + " " + model.Left * 1000 + " ml " + model.Date + Environment.NewLine);
            }
            else
                File.AppendAllText(@"RecipeList.txt", model.Item.ToLower() + " " + model.Left + " " + model.Unit + " " + model.Date + Environment.NewLine);
        };
    } 

    private void LoadList()
    {
        string[] lines = System.IO.File.ReadAllLines(@"RecipeList.txt");
        models.Clear();
        foreach (string line in lines)
        {
            string[] products = line.Split(' ');
            string ItemName = products[0];
            models.Add(new RecipeModel(){Item = string.Concat(ItemName[0].ToString().ToUpper(), ItemName.AsSpan(1)), Left = Int32.Parse(products[1]), Unit = products[2], Date =  products[3]});
        }
    }

    private void FindRecipe()
    {
        System.IO.StreamReader RecipeFile = new System.IO.StreamReader(@"Recipes.txt");
        dishes.Clear();
        do
        {
            string Recipe = RecipeFile.ReadLine();
            int Need = Int32.Parse(RecipeFile.ReadLine());
            ingredients.Clear();
            for (int i = 0; i<Need; i++)
            {
            string[] item = RecipeFile.ReadLine().Split(' ');
            ingredients.Add(new RecipeModel(){Item = item[0], Left = Int32.Parse(item[1]), Unit = item[2]});
            }
            foreach (var ingredient in ingredients)
            {
                foreach(var model in models)
                {
                    if(ingredient.Item.Equals(model.Item.ToLower()) && ingredient.Left <= model.Left)
                    {
                        Need--;
                    }
                }   
            }
            if(Need == 0)
            {
                dishes.Add("SVEIKINAME GALITE PASIGAMINTI " + Recipe.ToUpper());
            }
        }while(RecipeFile.ReadLine() != null);
        if(!dishes.Any())
            dishes.Add("You can't make anything");
    }
}

<table class="table">
    <tr>
        <th>Item</th>
        <th>Left</th>
        <th>Measurement</th>
        <th>Best until</th>
        <th>Add/Remove</th>
    </tr>

@foreach (var model in models)
{
    <tr>
        <td>@model.Item</td>
        <td>@model.Left</td>
        <td>@model.Unit</td> 
        <td>@model.Date</td> 
        <td>
            <button @onclick="() => models.Remove(model)">
                <span class="oi oi-trash" aria-hidden="true"></span>
            </button>  
        </td>
    </tr>
}
</table>

<div>
    <input type = "text" size="10" @bind="@itemTextField" @oninput="(e) => { itemTextField = e.Value ==null? string.Empty:(string)e.Value;}"/> <b>&emsp;&emsp;</b>
    <input type = "number" @bind="@leftTextField" @oninput="(e) => { leftTextField = e.Value ==null? string.Empty:(string)e.Value;}"/> <b>&emsp;&emsp;</b>
    <select @bind="@unitTextField" @oninput="(e) => { unitTextField = e.Value ==null? string.Empty:(string)e.Value;}" name="unit" id="unit">
                        <option value="g">g</option>
                        <option value="kg">kg</option>
                        <option value="l">l</option>
                        <option value="ml">ml</option>
                        <option value="oz">oz</option>
                        <option value="units"></option>
                        </select>   <b>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;</b>
    <input @oninput="(e) => { dateTextField = e.Value ==null? string.Empty:(string)e.Value;}" type="date" id="bestuntilday" name="bestuntilday" size="1"> <b>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;</b>
    <button class="btn btn-primary" @onclick="AddProduct">Add new product</button>
</div>

<ul class="Recipes" >
    @foreach (string dish in dishes)
    {
        <li style="color:red;font-size:50px;">@dish</li>
    }
</ul>


<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>


<h3><font color="#3a0647"><br>font2</font></h3>

<h3><font color="purple"><br>font3<br></font></h3>
