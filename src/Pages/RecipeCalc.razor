@page "/recipecalc"
@using System.IO
@using Wasted.Data
@using Newtonsoft.Json
@inject RecipeCalcService RecipeCalcService 

<h1>RECIPE CALCULATOR</h1>

<p style="font-size:20px;">Reduce food waste by using leftover products!</p>

<p style="font-size:20px;">Using this page you will be able to enter (or upload) the produce, and we will provide you with endless recipes, where you can use them!</p>
<hr><hr>

<button class="btn btn-primary" @onclick="SaveList">Save list</button>

<button class="btn btn-primary" @onclick="LoadList">Load list</button>

<button class="btn btn-primary" @onclick="FindRecipe">Find a recipe!</button>

<hr>

@code {
    string itemTextField = "";
    string leftTextField = "";
    string unitTextField = "";
    string dateTextField = "";
    List<RecipeModel> products = new();
    List<String> expiredProducts = new();
    List<DishModel> dishes = new List<DishModel>();
    private void AddProduct()
    {
        bool allFilled = (!string.IsNullOrEmpty(itemTextField)&&!string.IsNullOrEmpty(leftTextField)&&!string.IsNullOrEmpty(unitTextField)&&!string.IsNullOrEmpty(dateTextField));
        //in case of same items being entered twice
        foreach (var product in products)
        {
            if(itemTextField.ToLower().Trim() == product.Item.ToLower() && allFilled)
            {
                if(unitTextField == "kg" || unitTextField == "l")
                {product.Left += Int32.Parse(leftTextField) * 1000;}
                else
                {product.Left += Int32.Parse(leftTextField);} //adds what's left and deletes the new item
                allFilled = false;
            }
        }
        if(allFilled)
        {
            products.Add(new RecipeModel(){Item = itemTextField.Trim(), Left = Int32.Parse(leftTextField), Unit = unitTextField, Date = dateTextField});
        }
        itemTextField = "";
        leftTextField = "";
        unitTextField = "";
        dateTextField = "";
        expiredProducts = RecipeCalcService.FindExpiredProducts(products);
    }

    private void SaveList()
    {
        RecipeCalcService.SaveProducts(products);
        expiredProducts = RecipeCalcService.FindExpiredProducts(products);
    } 

    private void LoadList()
    {
        products.Clear();
        products = RecipeCalcService.GetProducts();
        expiredProducts = RecipeCalcService.FindExpiredProducts(products);
    }

    private void FindRecipe()
    {
        dishes = RecipeCalcService.FindRecipe(products);
        expiredProducts = RecipeCalcService.FindExpiredProducts(products);
    }
}
<table class="table">
    <tr>
        <th>Item</th>
        <th>Left</th>
        <th>Measurement</th>
        <th>Best until</th>
        <th>Add/Remove</th>
    </tr>

@foreach (var product in products)
{
    <tr>
        <td>@product.Item</td>
        <td>@product.Left</td>
        <td>@product.Unit</td> 
        <td>@product.Date</td> 
        <td>
            <button @onclick="() => products.Remove(product)">
                <span class="oi oi-trash" aria-hidden="true"></span>
            </button>  
        </td>
    </tr>
}
</table>

<div>
    <input type = "text" size="10" id="itemfieldid" @bind="@itemTextField" @oninput="(e) => { itemTextField = e.Value ==null? string.Empty:(string)e.Value;}"/> 
    <input type = "number" id="leftfieldid" @bind="@leftTextField" @oninput="(e) => { leftTextField = e.Value ==null? string.Empty:(string)e.Value;}"/> 
    <select @bind="@unitTextField" @oninput="(e) => { unitTextField = e.Value ==null? string.Empty:(string)e.Value;}" name="unit" id="unit">
                        <option value="g">g</option>
                        <option value="kg">kg</option>
                        <option value="l">l</option>
                        <option value="ml">ml</option>
                        <option value="oz">oz</option>
                        <option value="unit(s)"></option>
                        </select>
    <input @oninput="(e) => { dateTextField = e.Value ==null? string.Empty:(string)e.Value;}" type="date" id="bestuntilday" name="bestuntilday" size="1">
    <button class="btn btn-primary" @onclick="AddProduct">Add new product</button>
</div>

@if(dishes.Any()){<h1><font color=#3a0647><br>Here's what you can make:</font></h1>
  <dl class="Recipes" >
     @foreach (var dish in dishes) 
    {
        <dt style="color:#3a0647;font-size:30px;">@dish.Name</dt>
        <dd>You will need:</dd>
        <ul>
            @foreach (var Ingredient in dish.Ingredients)
            {
                <li>@Ingredient.Item @Ingredient.Left @Ingredient.Unit</li>
            }
        </ul>
}
</dl>  
}

@if(expiredProducts.Any()){<h1><font style="color:red;font-size:25px;"><br>Be careful! These products have 3 or less days left, before they expire:</font></h1>}
<ul class="Expired" >
    @foreach (string expiredProduct in expiredProducts)
    {
        <li style="color:red;font-size:25px;">@expiredProduct</li>
    }
</ul>